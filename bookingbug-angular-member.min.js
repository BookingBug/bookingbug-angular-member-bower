(function(){"use strict";angular.module("BBMember",["BB","BBMember.Directives","BBMember.Services","BBMember.Filters","BBMember.Controllers","BBMember.Models","trNgGrid","pascalprecht.translate"]),angular.module("BBMember").config(function($logProvider){return $logProvider.debugEnabled(!0)}),angular.module("BBMember").run(function(){return TrNgGrid.defaultColumnOptions={enableFiltering:!1}}),angular.module("BBMember.Directives",[]),angular.module("BBMember.Filters",[]),angular.module("BBMember.Services",["ngResource","ngSanitize","ngLocalData"]),angular.module("BBMember.Controllers",["ngLocalData","ngSanitize"]),angular.module("BBMember.Models",[]),angular.module("BBMemberMockE2E",["BBMember","BBAdminMockE2E"])}).call(this),function(){angular.module("BBMember").controller("MemberBookings",function($scope,$modal,$log,MemberBookingService,$q,ModalForm,MemberPrePaidBookingService){return $scope.loading=!0,$scope.getUpcomingBookings=function(){var params;return params={start_date:moment().format("YYYY-MM-DD")},$scope.getBookings(params).then(function(bookings){return $scope.upcoming_bookings=bookings})},$scope.getPastBookings=function(num,type){var date,params;return date=moment().subtract(num,type),params={start_date:date.format("YYYY-MM-DD"),end_date:moment().format("YYYY-MM-DD")},$scope.getBookings(params).then(function(bookings){return $scope.past_bookings=bookings})},$scope.flushBookings=function(){var params;return params={start_date:moment().format("YYYY-MM-DD")},MemberBookingService.flush($scope.member,params)},$scope.edit=function(booking){return booking.getAnswersPromise().then(function(answers){var answer,i,len,ref;for(ref=answers.answers,i=0,len=ref.length;len>i;i++)answer=ref[i],booking["question"+answer.question_id]=answer.value;return ModalForm.edit({model:booking,title:"Booking Details",templateUrl:"edit_booking_modal_form.html",windowClass:"member_edit_booking_form"})})},$scope.cancel=function(booking){var modalInstance;return modalInstance=$modal.open({templateUrl:"member_booking_delete_modal.html",windowClass:"bbug",controller:function($scope,$rootScope,$modalInstance,booking){return $scope.controller="ModalDelete",$scope.booking=booking,$scope.confirm_delete=function(){return $modalInstance.close(booking)},$scope.cancel=function(){return $modalInstance.dismiss("cancel")}},resolve:{booking:function(){return booking}}}),modalInstance.result.then(function(booking){return $scope.cancelBooking(booking)})},$scope.getBookings=function(params){var defer;return $scope.loading=!0,defer=$q.defer(),MemberBookingService.query($scope.member,params).then(function(bookings){return $scope.loading=!1,defer.resolve(bookings)},function(err){return $log.error(err.data),$scope.loading=!1}),defer.promise},$scope.cancelBooking=function(booking){return $scope.loading=!0,MemberBookingService.cancel($scope.member,booking).then(function(){return $scope.bookings&&($scope.bookings=$scope.bookings.filter(function(b){return b.id!==booking.id})),$scope.removeBooking&&$scope.removeBooking(booking),$scope.loading=!1})},$scope.getPrePaidBookings=function(params){var defer;return $scope.loading=!0,defer=$q.defer(),MemberPrePaidBookingService.query($scope.member,params).then(function(bookings){return $scope.loading=!1,$scope.pre_paid_bookings=bookings,defer.resolve(bookings)},function(err){return $log.error(err.data),$scope.loading=!1}),defer.promise}})}.call(this),function(){angular.module("BBMember").controller("Wallet",function($scope,$q,WalletService,$log,$modal,$rootScope,AlertService,ErrorService){return $scope.member&&($scope.company_id=$scope.member.company_id),$scope.show_wallet_logs=!1,$scope.notLoaded($scope),$scope.error_message=!1,$scope.payment_success=!1,$scope.toggleWalletPaymentLogs=function(){return $scope.show_wallet_logs=$scope.show_wallet_logs?!1:!0},$scope.showTopUpBox=function(){return $scope.amount?!0:$scope.show_topup_box},$scope.getWalletForMember=function(member,params){return $scope.notLoaded($scope),WalletService.getWalletForMember(member,params).then(function(wallet){return $scope.setLoaded($scope),$scope.wallet=wallet,$scope.wallet},function(err){return $scope.setLoaded($scope),$log.error(err)})},$scope.getWalletLogs=function(wallet){return $scope.notLoaded($scope),WalletService.getWalletLogs($scope.wallet).then(function(logs){return $scope.setLoaded($scope),$scope.logs=logs},function(err){return $scope.setLoaded($scope),$log.error(err.data)})},$scope.createWalletForMember=function(member){return $scope.notLoaded($scope),WalletService.createWalletForMember(member).then(function(wallet){return $scope.setLoaded($scope),$scope.wallet=wallet},function(err){return $scope.setLoaded($scope),$log.error(err.data)})},$scope.updateWallet=function(member,amount){var params;return $scope.notLoaded($scope),$scope.payment_success=!1,$scope.error_message=!1,member&&amount?(params={amount:amount},$scope.wallet&&(params.wallet_id=$scope.wallet.id),$scope.total&&(params.total_id=$scope.total.id),$scope.deposit&&(param.deposit=$scope.deposit),$scope.basket&&(params.basket_total_price=$scope.basket.total_price),WalletService.updateWalletForMember(member,params).then(function(wallet){return $scope.setLoaded($scope),$scope.wallet=wallet},function(err){return $scope.setLoaded($scope),$log.error(err.data)})):void 0},$scope.activateWallet=function(member){var params;return $scope.notLoaded($scope),member?(params={status:1},$scope.wallet&&(params.wallet_id=$scope.wallet.id),WalletService.updateWalletForMember(member,params).then(function(wallet){return $scope.setLoaded($scope),$scope.wallet=wallet},function(err){return $scope.setLoaded($scope),$log.error(err.date)})):void 0},$scope.deactivateWallet=function(member){var params;return $scope.notLoaded($scope),member?(params={status:0},$scope.wallet&&(params.wallet_id=$scope.wallet.id),WalletService.updateWalletForMember(member,params).then(function(wallet){return $scope.setLoaded($scope),$scope.wallet=wallet},function(err){return $scope.setLoaded($scope),$log.error(err.date)})):void 0},$scope.callNotLoaded=function(_this){return function(){return $scope.notLoaded($scope),$scope.$emit("wallet_payment:loading")}}(this),$scope.callSetLoaded=function(_this){return function(){return $scope.setLoaded($scope),$scope.$emit("wallet_payment:finished_loading")}}(this),$scope.walletPaymentDone=function(){var params;return params={no_cache:!0},$scope.getWalletForMember($scope.member,params).then(function(wallet){return $scope.$emit("wallet_payment:success",wallet)})},$scope.basketWalletPaymentDone=function(){return $scope.decideNextPage("checkout")},$scope.error=function(message){return $scope.error_message="Payment Failure: "+message,$log.warn("Payment Failure: "+message),$scope.$emit("wallet_payment:error",$scope.error_message),AlertService.warning(ErrorService.getAlert("TOPUP_FAILED"))},$scope.add=function(value){return value=value||$scope.amount_increment,$scope.amount+=value},$scope.subtract=function(value){return value=value||$scope.amount_increment,$scope.add(-value)},$scope.isSubtractValid=function(value){var new_amount;return $scope.wallet?(value=value||$scope.amount_increment,new_amount=$scope.amount-value,new_amount>=$scope.wallet.min_amount):!1}})}.call(this),function(){angular.module("BBMember").directive("memberBookings",function($rootScope){var link;return link=function(scope,element,attrs){var base,base1;return $rootScope.bb||($rootScope.bb={}),(base=$rootScope.bb).api_url||(base.api_url=scope.apiUrl),(base1=$rootScope.bb).api_url||(base1.api_url="http://www.bookingbug.com")},{link:link,templateUrl:"member_bookings_tabs.html",scope:{apiUrl:"@",member:"="}}})}.call(this),function(){angular.module("BBMember").directive("memberBookingsTable",function($modal,$log,$rootScope,MemberLoginService,MemberBookingService,$compile,$templateCache,ModalForm){var controller,link;return controller=function($scope,$modal){var getBookings;return $scope.loading=!0,$scope.fields||($scope.fields=["describe","full_describe"]),$scope.$watch("member",function(member){return null!=member?getBookings($scope,member):void 0}),$scope.edit=function(id){var booking;return booking=_.find($scope.booking_models,function(b){return b.id===id}),booking.getAnswersPromise().then(function(answers){var answer,i,len,ref;for(ref=answers.answers,i=0,len=ref.length;len>i;i++)answer=ref[i],booking["question"+answer.question_id]=answer.value;return ModalForm.edit({model:booking,title:"Booking Details",templateUrl:"edit_booking_modal_form.html"})})},getBookings=function($scope,member){var params;return params={start_date:moment().format("YYYY-MM-DD")},MemberBookingService.query(member,params).then(function(bookings){return $scope.booking_models=bookings,$scope.bookings=_.map(bookings,function(booking){return _.pick(booking,"id","full_describe","describe")}),$scope.loading=!1},function(err){return $log.error(err.data),$scope.loading=!1})}},link=function(scope,element,attrs){var base,base1;return $rootScope.bb||($rootScope.bb={}),(base=$rootScope.bb).api_url||(base.api_url=scope.apiUrl),(base1=$rootScope.bb).api_url||(base1.api_url="http://www.bookingbug.com")},{link:link,controller:controller,templateUrl:"member_bookings_table.html",scope:{apiUrl:"@",fields:"=?",member:"="}}})}.call(this),function(){angular.module("BBMember").directive("memberForm",function($modal,$log,$rootScope,MemberLoginService,MemberBookingService){var controller,link;return controller=function($scope){return $scope.loading=!0,$scope.$watch("member",function(member){return null!=member?member.$get("edit_member").then(function(member_schema){return $scope.form=member_schema.form,$scope.schema=member_schema.schema,$scope.loading=!1}):void 0}),$scope.submit=function(form){return $scope.loading=!0,$scope.member.$put("self",{},form).then(function(member){return $log.info("Successfully updated member"),$scope.loading=!1},function(err){return $log.error("Failed to update member - "+err),$scope.loading=!1})}},link=function(scope,element,attrs){var base,base1;return $rootScope.bb||($rootScope.bb={}),(base=$rootScope.bb).api_url||(base.api_url=attrs.apiUrl),(base1=$rootScope.bb).api_url||(base1.api_url="http://www.bookingbug.com")},{link:link,controller:controller,template:'<form sf-schema="schema" sf-form="form" sf-model="member"\n  ng-submit="submit(member)" ng-hide="loading"></form>'}})}.call(this),function(){angular.module("BBMember").directive("loginMember",function($modal,$log,$rootScope,MemberLoginService,$templateCache,$q,$sessionStorage,halClient){var link,loginMemberController,pickCompanyController;return loginMemberController=function($scope,$modalInstance,company_id){return $scope.title="Login",$scope.schema={type:"object",properties:{email:{type:"string",title:"Email"},password:{type:"string",title:"Password"}}},$scope.form=[{key:"email",type:"email",feedback:!1,autofocus:!0},{key:"password",type:"password",feedback:!1}],$scope.login_form={},$scope.submit=function(form){var options;return options={company_id:company_id},MemberLoginService.login(form,options).then(function(member){return member.email=form.email,member.password=form.password,$modalInstance.close(member)},function(err){return $modalInstance.dismiss(err)})},$scope.cancel=function(){return $modalInstance.dismiss("cancel")}},pickCompanyController=function($scope,$modalInstance,companies){var c;return $scope.title="Pick Company",$scope.schema={type:"object",properties:{company_id:{type:"integer",title:"Company"}}},$scope.schema.properties.company_id["enum"]=function(){var i,len,results;for(results=[],i=0,len=companies.length;len>i;i++)c=companies[i],results.push(c.id);return results}(),$scope.form=[{key:"company_id",type:"select",titleMap:function(){var i,len,results;for(results=[],i=0,len=companies.length;len>i;i++)c=companies[i],results.push({value:c.id,name:c.name});return results}(),autofocus:!0}],$scope.pick_company_form={},$scope.submit=function(form){return $modalInstance.close(form.company_id)},$scope.cancel=function(){return $modalInstance.dismiss("cancel")}},link=function(scope,element,attrs){var base,base1,loginModal,pickCompanyModal,session_member,tryLogin;return $rootScope.bb||($rootScope.bb={}),(base=$rootScope.bb).api_url||(base.api_url=scope.apiUrl),(base1=$rootScope.bb).api_url||(base1.api_url="http://www.bookingbug.com"),loginModal=function(){var modalInstance;return modalInstance=$modal.open({templateUrl:"login_modal_form.html",controller:loginMemberController,resolve:{company_id:function(){return scope.companyId}}}),modalInstance.result.then(function(result){return scope.memberEmail=result.email,scope.memberPassword=result.password,result.$has("members")?result.$get("members").then(function(members){var m;return scope.members=members,$q.all(function(){var i,len,results;for(results=[],i=0,len=members.length;len>i;i++)m=members[i],results.push(m.$get("company"));return results}()).then(function(companies){return pickCompanyModal(companies)})}):scope.member=result},function(){return loginModal()})},pickCompanyModal=function(companies){var modalInstance;return modalInstance=$modal.open({templateUrl:"pick_company_modal_form.html",controller:pickCompanyController,resolve:{companies:function(){return companies}}}),modalInstance.result.then(function(company_id){return scope.companyId=company_id,tryLogin()},function(){return pickCompanyModal()})},tryLogin=function(){var login_form,options;return login_form={email:scope.memberEmail,password:scope.memberPassword},options={company_id:scope.companyId},MemberLoginService.login(login_form,options).then(function(result){return result.$has("members")?result.$get("members").then(function(members){var m;return scope.members=members,$q.all(function(){var i,len,results;for(results=[],i=0,len=members.length;len>i;i++)m=members[i],results.push(m.$get("company"));return results}()).then(function(companies){return pickCompanyModal(companies)})}):scope.member=result},function(err){return loginModal()})},scope.memberEmail&&scope.memberPassword?tryLogin():$sessionStorage.getItem("login")?(session_member=$sessionStorage.getItem("login"),session_member=halClient.createResource(session_member),scope.member=session_member):loginModal()},{link:link,scope:{memberEmail:"@",memberPassword:"@",companyId:"@",apiUrl:"@",member:"="},transclude:!0,template:"<div ng-show='member' ng-transclude></div>"}})}.call(this),function(){angular.module("BBMember").directive("bbMemberPastBookings",function($rootScope){var link;return link=function(scope,element,attrs){var base,base1,getBookings;return $rootScope.bb||($rootScope.bb={}),(base=$rootScope.bb).api_url||(base.api_url=scope.apiUrl),(base1=$rootScope.bb).api_url||(base1.api_url="http://www.bookingbug.com"),getBookings=function(){return scope.getPastBookings()},scope.$watch("member",function(){return scope.past_bookings?void 0:scope.getBookings()}),getBookings()},{link:link,controller:"MemberBookings",templateUrl:"member_past_bookings.html",scope:{apiUrl:"@",member:"="}}})}.call(this),function(){angular.module("BBMember").directive("bbMemberPrePaidBookings",function($rootScope){var link;return link=function(scope,element,attrs){var base,base1,getBookings;return $rootScope.bb||($rootScope.bb={}),(base=$rootScope.bb).api_url||(base.api_url=scope.apiUrl),(base1=$rootScope.bb).api_url||(base1.api_url="http://www.bookingbug.com"),scope.loading=!0,(getBookings=function(){return scope.getPrePaidBookings({})["finally"](function(){return scope.loading=!1})})()},{link:link,controller:"MemberBookings",templateUrl:"member_pre_paid_bookings.html",scope:{apiUrl:"@",member:"="}}})}.call(this),function(){angular.module("BBMember").directive("memberSsoLogin",function($rootScope,LoginService,$sniffer,$timeout){var link;return link=function(scope,element,attrs){var base,base1,data,options;return $rootScope.bb||($rootScope.bb={}),(base=$rootScope.bb).api_url||(base.api_url=scope.apiUrl),(base1=$rootScope.bb).api_url||(base1.api_url="http://www.bookingbug.com"),scope.member=null,options={root:$rootScope.bb.api_url,company_id:scope.companyId},data={token:scope.token},$sniffer.msie&&$sniffer.msie<10&&$rootScope.iframe_proxy_ready===!1?$timeout(function(){return LoginService.ssoLogin(options,data).then(function(member){return scope.member=member})},2e3):LoginService.ssoLogin(options,data).then(function(member){return scope.member=member})},{link:link,scope:{token:"@memberSsoLogin",companyId:"@",apiUrl:"@",member:"="},transclude:!0,template:"<div ng-if='member' ng-transclude></div>"}})}.call(this),function(){angular.module("BBMember").directive("bbMemberUpcomingBookings",function($rootScope){var link;return link=function(scope,element,attrs){var base,base1,getBookings;return $rootScope.bb||($rootScope.bb={}),(base=$rootScope.bb).api_url||(base.api_url=scope.apiUrl),(base1=$rootScope.bb).api_url||(base1.api_url="http://www.bookingbug.com"),getBookings=function(){return scope.getUpcomingBookings()},scope.$on("updateBookings",function(){return scope.flushBookings(),getBookings()}),scope.$watch("member",function(){return scope.upcoming_bookings?void 0:scope.getBookings()}),getBookings()},{link:link,controller:"MemberBookings",templateUrl:"member_upcoming_bookings.html",scope:{apiUrl:"@",member:"="}}})}.call(this),function(){angular.module("BBMember").directive("bbWallet",function($rootScope){return{scope:{apiUrl:"@",member:"="},controller:"Wallet",templateUrl:"wallet.html",link:function(scope,element,attrs){var base,base1,getWalletForMember;return $rootScope.bb||($rootScope.bb={}),(base=$rootScope.bb).api_url||(base.api_url=scope.apiUrl),(base1=$rootScope.bb).api_url||(base1.api_url="http://www.bookingbug.com"),$rootScope.member&&(scope.member||(scope.member=$rootScope.member)),getWalletForMember=function(){return scope.getWalletForMember(scope.member,{})},scope.$watch("member",function(member){return null!=member&&getWalletForMember(),scope.amount?getWalletForMember():void 0}),scope.$on("wallet_payment:success",function(event,wallet){return scope.wallet=wallet,scope.payment_success=!0,scope.error_message=!1,scope.show_topup_box=!1}),scope.$on("wallet_payment:error",function(event,error){return scope.error_message=error,scope.payment_success=!1}),scope.$on("wallet_payment:loading",function(event){return scope.loading=!0}),scope.$on("wallet_payment:finished_loading",function(event){return scope.loading=!1})}}})}.call(this),function(){angular.module("BBMember").directive("bbWalletLogs",function($rootScope){var link;return link=function(scope,element,attrs){var base,base1,getWalletForMember,getWalletLogsForWallet;return $rootScope.bb||($rootScope.bb={}),(base=$rootScope.bb).api_url||(base.api_url=scope.apiUrl),(base1=$rootScope.bb).api_url||(base1.api_url="http://www.bookingbug.com"),getWalletLogsForWallet=function(){return scope.getWalletLogs(scope.wallet)},getWalletForMember=function(){return scope.getWalletForMember(scope.member)},scope.$watch("member",function(member){return null!=member?getWalletForMember():void 0}),scope.$watch("wallet",function(wallet){return null!=wallet?getWalletLogsForWallet():void 0})},{link:link,controller:"Wallet",templateUrl:"wallet_logs.html",scope:{member:"=",wallet:"="}}})}.call(this),function(){angular.module("BB.Directives").directive("bbWalletPayment",function($sce,$rootScope,$window,$location,SettingsService,AlertService,ErrorService){return{restrict:"A",controller:"Wallet",scope:!0,replace:!0,link:function(scope,element,attrs){var getHost,getWalletForMember,sendLoadEvent;return scope.options=scope.$eval(attrs.bbWalletPayment)||{},$rootScope.member&&(scope.member||(scope.member=$rootScope.member)),scope.options.member&&(scope.member||(scope.member=scope.options.member)),scope.options.amount&&(scope.amount=scope.options.amount),scope.amount_increment=scope.options.amount_increment||0,getHost=function(url){var a;return a=document.createElement("a"),a.href=url,a.protocol+"//"+a.host},sendLoadEvent=function(element,origin,scope){var custom_partial_url,custom_stylesheet,payload,referrer;return referrer=$location.protocol()+"://"+$location.host(),$location.port()&&(referrer+=":"+$location.port()),custom_stylesheet=scope.options.custom_stylesheet?scope.options.custom_stylesheet:null,custom_partial_url=scope.bb&&scope.bb.custom_partial_url?scope.bb.custom_partial_url:null,payload=JSON.stringify({type:"load",message:referrer,custom_partial_url:custom_partial_url,custom_stylesheet:custom_stylesheet,scroll_offset:SettingsService.getScrollOffset()}),element.find("iframe")[0].contentWindow.postMessage(payload,origin)},getWalletForMember=function(){return scope.getWalletForMember(scope.member,{})},scope.$watch("member",function(member){return null!=member&&getWalletForMember(),scope.amount?getWalletForMember():void 0}),scope.$watch("wallet",function(wallet){return wallet&&(wallet.min_amount&&(scope.amount=wallet.min_amount),wallet.$has("new_payment"))?(scope.callNotLoaded(),scope.wallet_payment_url=$sce.trustAsResourceUrl(scope.wallet.$href("new_payment")),scope.show_payment_iframe=!0,element.find("iframe").bind("load",function(_this){return function(event){var origin,url;return scope.wallet_payment_url&&(url=scope.wallet_payment_url),origin=getHost(url),sendLoadEvent(element,origin,scope),scope.$apply(function(){return scope.callSetLoaded()})}}(this))):void 0}),$window.addEventListener("message",function(_this){return function(event){var data;return angular.isObject(event.data)?data=event.data:event.data.match(/iFrameSizer/)||(data=JSON.parse(event.data)),scope.$apply(function(){if(data)switch(data.type){case"submitting":return scope.callNotLoaded();case"error":return scope.callSetLoaded(),scope.error(data.message),scope.show_payment_iframe=!1;case"wallet_payment_complete":return scope.walletPaymentDone();case"basket_wallet_payment_complete":return scope.callSetLoaded(),scope.basketWalletPaymentDone()}})}}(this),!1)}}})}.call(this),function(){"use strict";var bind=function(fn,me){return function(){return fn.apply(me,arguments)}},extend=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child},hasProp={}.hasOwnProperty;angular.module("BB.Models").factory("Member.BookingModel",function($q,$window,BBModel,BaseModel,$bbug){var Member_Booking;return Member_Booking=function(superClass){function Member_Booking(data){this.getMemberPromise=bind(this.getMemberPromise,this),Member_Booking.__super__.constructor.call(this,data),this.datetime=moment.parseZone(this.datetime),this.time_zone&&this.datetime.tz(this.time_zone),this.end_datetime=moment.parseZone(this.end_datetime),this.time_zone&&this.end_datetime.tz(this.time_zone)}return extend(Member_Booking,superClass),Member_Booking.prototype.getGroup=function(){return this.group?this.group:this._data.$has("event_groups")?this._data.$get("event_groups").then(function(_this){return function(group){return _this.group=group,_this.group}}(this)):void 0},Member_Booking.prototype.getColour=function(){return this.getGroup()?this.getGroup().colour:"#FFFFFF"},Member_Booking.prototype.getCompany=function(){return this.company?this.company:this.$has("company")?this._data.$get("company").then(function(_this){return function(company){return _this.company=new BBModel.Company(company),_this.company}}(this)):void 0},Member_Booking.prototype.getAnswers=function(){var defer;return defer=$q.defer(),this.answers&&defer.resolve(this.answers),this._data.$has("answers")?this._data.$get("answers").then(function(_this){return function(answers){var a;return _this.answers=function(){var i,len,results;for(results=[],i=0,len=answers.length;len>i;i++)a=answers[i],results.push(new BBModel.Answer(a));return results}(),defer.resolve(_this.answers)}}(this)):defer.resolve([]),defer.promise},Member_Booking.prototype.printed_price=function(){return parseFloat(this.price)%1===0?"£"+this.price:$window.sprintf("£%.2f",parseFloat(this.price))},Member_Booking.prototype.getMemberPromise=function(){var defer;return defer=$q.defer(),this.member&&defer.resolve(this.member),this._data.$has("member")&&this._data.$get("member").then(function(_this){return function(member){return _this.member=new BBModel.Member.Member(member),defer.resolve(_this.member)}}(this)),defer.promise},Member_Booking.prototype.canCancel=function(){return moment(this.min_cancellation_time).isAfter(moment())},Member_Booking.prototype.canMove=function(){return this.canCancel()},Member_Booking}(BaseModel)})}.call(this),function(){var extend=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child},hasProp={}.hasOwnProperty;angular.module("BB.Models").factory("Member.MemberModel",function($q,BBModel,BaseModel,ClientModel){var Member_Member;return Member_Member=function(superClass){function Member_Member(){return Member_Member.__super__.constructor.apply(this,arguments)}return extend(Member_Member,superClass),Member_Member}(ClientModel)})}.call(this),function(){var extend=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child},hasProp={}.hasOwnProperty;angular.module("BB.Models").factory("Member.PrePaidBookingModel",function($q,BBModel,BaseModel){var Member_PrePaidBooking;return Member_PrePaidBooking=function(superClass){function Member_PrePaidBooking(data){Member_PrePaidBooking.__super__.constructor.call(this,data)}return extend(Member_PrePaidBooking,superClass),Member_PrePaidBooking.prototype.checkValidity=function(event){return this.service_id&&event.service_id&&this.service_id!==event.service_id?!1:this.resource_id&&event.resource_id&&this.resource_id!==event.resource_id?!1:this.person_id&&event.person_id&&this.person_id!==event.person_id?!1:!0},Member_PrePaidBooking}(BaseModel)})}.call(this),function(){var extend=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child},hasProp={}.hasOwnProperty;angular.module("BB.Models").factory("Member.WalletModel",function(BBModel,BaseModel){var Member_Wallet;return Member_Wallet=function(superClass){function Member_Wallet(data){Member_Wallet.__super__.constructor.call(this,data)}return extend(Member_Wallet,superClass),Member_Wallet}(BaseModel)})}.call(this),function(){var extend=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child},hasProp={}.hasOwnProperty;angular.module("BB.Models").factory("Member.WalletLogModel",function($q,BBModel,BaseModel){var Member_WalletLog;return Member_WalletLog=function(superClass){function Member_WalletLog(data){Member_WalletLog.__super__.constructor.call(this,data)}return extend(Member_WalletLog,superClass),Member_WalletLog}(BaseModel)})}.call(this),function(){angular.module("BB.Services").factory("MemberBookingService",function($q,SpaceCollections,$rootScope,MemberService,BBModel){return{query:function(member,params){var deferred;return deferred=$q.defer(),member.$has("bookings")?member.$get("bookings",params).then(function(_this){return function(bookings){var booking;return angular.isArray(bookings)?(bookings=function(){var i,len,results;for(results=[],i=0,len=bookings.length;len>i;i++)booking=bookings[i],results.push(new BBModel.Member.Booking(booking));return results}(),deferred.resolve(bookings)):bookings.$get("bookings",params).then(function(bookings){return bookings=function(){var i,len,results;for(results=[],i=0,len=bookings.length;len>i;i++)booking=bookings[i],results.push(new BBModel.Member.Booking(booking));return results}(),deferred.resolve(bookings)},function(err){return deferred.reject(err)})}}(this),function(err){return deferred.reject(err)}):deferred.reject("member does not have bookings"),deferred.promise},cancel:function(member,booking){var deferred;return deferred=$q.defer(),booking.$del("self").then(function(_this){return function(b){return booking.deleted=!0,b=new BBModel.Member.Booking(b),MemberService.refresh(member).then(function(member){return member=member},function(err){}),deferred.resolve(b)}}(this),function(_this){return function(err){return deferred.reject(err)}}(this)),deferred.promise},update:function(booking){var deferred;return deferred=$q.defer(),$rootScope.member.flushBookings(),booking.$put("self",{},booking).then(function(_this){return function(booking){var book;return book=new BBModel.Member.Booking(booking),SpaceCollections.checkItems(book),deferred.resolve(book)}}(this),function(_this){return function(err){return _.each(booking,function(value,key,booking){return"data"!==key&&"self"!==key?booking[key]=booking.data[key]:void 0}),deferred.reject(err,new BBModel.Member.Booking(booking))}}(this)),deferred.promise},flush:function(member,params){return member.$has("bookings")?member.$flush("bookings",params):void 0}}})}.call(this),function(){angular.module("BBMember.Services").factory("MemberLoginService",function($q,halClient,$rootScope,BBModel,$sessionStorage){return{login:function(form,options){var defer,url;return defer=$q.defer(),url=$rootScope.bb.api_url+"/api/v1/login",null!=options.company_id&&(url=url+"/member/"+options.company_id),halClient.$post(url,options,form).then(function(login){return login.$has("member")?login.$get("member").then(function(member){var auth_token;return member=new BBModel.Member.Member(member),auth_token=member.getOption("auth_token"),$sessionStorage.setItem("login",member.$toStore()),$sessionStorage.setItem("auth_token",auth_token),defer.resolve(member)}):login.$has("members")?defer.resolve(login):defer.reject("No member account for login")},function(_this){return function(err){var login;return 400===err.status?(login=halClient.$parse(err.data),login.$has("members")?defer.resolve(login):defer.reject(err)):defer.reject(err)}}(this)),defer.promise}}})}.call(this),function(){angular.module("BB.Services").factory("MemberService",function($q,halClient,$rootScope,BBModel){return{refresh:function(member){var deferred;return deferred=$q.defer(),member.$flush("self"),member.$get("self").then(function(_this){return function(member){return member=new BBModel.Member.Member(member),deferred.resolve(member)}}(this),function(_this){return function(err){return deferred.reject(err)}}(this)),deferred.promise},current:function(){var callback,deferred;return deferred=$q.defer(),callback=function(){return deferred.resolve($rootScope.member)},setTimeout(callback,200),deferred.promise},updateMember:function(member,params){var deferred;return deferred=$q.defer(),member.$put("self",{},params).then(function(_this){return function(member){return member=new BBModel.Member.Member(member),deferred.resolve(member)}}(this),function(_this){return function(err){return deferred.reject(err)}}(this)),deferred.promise},sendWelcomeEmail:function(member,params){var deferred;return deferred=$q.defer(),member.$post("send_welcome_email",params).then(function(_this){return function(member){return member=new BBModel.Member.Member(member),deferred.resolve(member)}}(this),function(_this){return function(err){return deferred.reject(err)}}(this)),deferred.promise}}})}.call(this),function(){angular.module("BB.Services").factory("MemberPrePaidBookingService",function($q,BBModel){return{query:function(member,params){var deferred;return deferred=$q.defer(),member.$has("pre_paid_bookings")?member.$get("pre_paid_bookings",params).then(function(_this){return function(bookings){var booking;return angular.isArray(bookings)?(bookings=function(){var i,len,results;

for(results=[],i=0,len=bookings.length;len>i;i++)booking=bookings[i],results.push(new BBModel.Member.PrePaidBooking(booking));return results}(),deferred.resolve(bookings)):bookings.$get("pre_paid_bookings",params).then(function(bookings){return bookings=function(){var i,len,results;for(results=[],i=0,len=bookings.length;len>i;i++)booking=bookings[i],results.push(new BBModel.Member.PrePaidBooking(booking));return results}(),deferred.resolve(bookings)})}}(this),function(_this){return function(err){return deferred.reject(err)}}(this)):deferred.reject("member does not have pre paid bookings"),deferred.promise}}})}.call(this),function(){angular.module("BB.Services").factory("WalletService",function($q,BBModel){return{getWalletForMember:function(member,params){var deferred;return deferred=$q.defer(),member.$has("wallet")?member.$get("wallet",params).then(function(wallet){return wallet=new BBModel.Member.Wallet(wallet),deferred.resolve(wallet)},function(err){return deferred.reject(err)}):deferred.reject("Wallets are not turned on."),deferred.promise},getWalletLogs:function(wallet){var deferred;return deferred=$q.defer(),wallet.$has("logs")?wallet.$get("logs").then(function(resource){return resource.$get("logs").then(function(logs){var log;return logs=function(){var i,len,results;for(results=[],i=0,len=logs.length;len>i;i++)log=logs[i],results.push(new BBModel.Member.WalletLog(log));return results}(),deferred.resolve(logs)})},function(_this){return function(err){return deferred.reject(err)}}(this)):deferred.reject("No Payments found"),deferred.promise},updateWalletForMember:function(member,params){var deferred;return deferred=$q.defer(),member.$has("wallet")?member.$put("wallet",{},params).then(function(wallet){return wallet=new BBModel.Member.Wallet(wallet),deferred.resolve(wallet)},function(err){return deferred.reject(err)}):deferred.reject("Wallets are not turned on."),deferred.promise},createWalletForMember:function(member){var deferred,params;return deferred=$q.defer(),params={},member.$has("wallet")?member.$post("wallet",{},params).then(function(wallet){return wallet=new BBModel.Member.Wallet(wallet),deferred.resolve(wallet)},function(err){return deferred.reject(err)}):deferred.reject("Wallets are not turned on."),deferred.promise}}})}.call(this);